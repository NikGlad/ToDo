# импортируем библиотеку random
import random

# создаём переменную HELP и прописываем многострочное значение используя тройные кавычки
HELP = """
help - напечатать справку по программе.
add - добавить задачу в список (название задачи запрашиваем у пользователя).
show - напечатать все добавленные задачи.
random - добавлять случайную задачу на дату Сегодня"""

# создаём список RANDOM_TASKS и прописываем в нём несколько вариантов выбора, при выборе команды random
RANDOM_TASKS = ["Записаться на курс в Нетологию", "Написать Гвидо письмо", "Покормить кошку", "Помыть машину"]

# создаём пустой словарь tasks в который будут добавляться задачи, при выборе команды add
tasks = {

}
# переменная run со значением True
run = True

# функция создаётся, чтобы её подставлять несколько раз в разные блоки кода, чтобы не повторять код предыдущих блоков
# создаём функцию с именем add_todo с аргументами date и task
def add_todo(date, task):
  # далее идёт тело функции. это блок кода к которому будем обращаться каждый раз при вызове функции, return позволяет вернуть результат работы функции

  # проверяем условие если дата есть в tasks
  if date in tasks:
      # то в словарь tasks, который лежит по ключу date добавить задачу task
      tasks[date].append(task)
  else:
      # иначе, если даты в словаре нет, то создаём запись с ключом date
      tasks[date] = []
      tasks[date].append(task)
  # вывод на экран следующего текста
  print("Задача ", task, " добавлена на дату ", date)

# создаём цикл while для run
while run:
  # переменная command равна значению, которую введёт пользователь
  command = input("Введите команду: ")
  # если значение введённое пользователем будет равно help
  if command == "help":
    # то на экран выведется значение переменной HELP
    print(HELP)
    # если значение введённое пользователем будет равно show
  elif command == "show":
    # то на экран выведется запрос от пользователя Введите дату для отображения списка задач:
    date = input("Введите дату для отображения списка задач: ")
    # если дата есть в списке tasks
    if date in tasks:

      # цикл for сиктаксис: для каждого элемента списка tasks нужно поместить этот элемент в переменную task выполнить блок кода
      # в нашем случае блок кода это print('- ', task) и остановиться если встретим break

      # цикл for:  для task в списке tasks со значением date напечатать '- ', task
      for task in tasks[date]:
        print('- ', task)
    #  иначе(то есть, если введённой даты в словаре нет), то напечатать Такой даты нет
    else:
      print("Такой даты нет")

  # если значение введённое пользователем будет равно add
  elif command == "add":
    # то на экран выведется запросы от пользователя (введённые данные присваиваются переменным date и task)
    date = input("Введите дату для добавления задачи: ")
    task = input("Введите название задачи: ")
    # выполнение блока кода функции
    # if date in tasks:
    #       # то в словарь tasks, который лежит по ключу date добавить задачу task
    #       tasks[date].append(task)
    #   else:
    #       # иначе, если даты в словаре нет, то создаём запись с ключом date
    #       tasks[date] = []
    #       tasks[date].append(task)
    #   # вывод на экран следующего текста
    #   print("Задача ", task, " добавлена на дату ", date)
    add_todo(date, task)
    # если значение введённое пользователем будет равно random
  elif command == "random":
    # переменная task обращается к функции choice модуля random, в скобках указывается список из которого надо выбрать задачу
    task = random.choice(RANDOM_TASKS)
    # выполнение блока кода функции
    # if date in tasks:
    #       # то в словарь tasks, который лежит по ключу date добавить задачу task
    #       tasks[date].append(task)
    #   else:
    #       # иначе, если даты в словаре нет, то создаём запись с ключом date
    #       tasks[date] = []
    #       tasks[date].append(task)
    #   # вывод на экран следующего текста
    #   print("Задача ", task, " добавлена на дату ", date)
    add_todo("Сегодня", task)
    #  иначе(то есть, если введённой команды нет в тех, которые введены в виде условий выше), то напечатать Неизвестная команда
  else:
    print("Неизвестная команда")

